buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.springframework.boot" version "1.5.9.RELEASE"
    id 'java'
    id 'groovy'
    id 'idea'
    id 'checkstyle'
}

group = 'com.stadnik'
version = '0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // Service-template
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.flywaydb:flyway-core')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'

    compile group: 'org.testcontainers', name: 'testcontainers', version: '1.5.1'

    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')

    compileOnly('org.projectlombok:lombok')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}
// Adds custom step to separate test and test-integration steps
sourceSets {
    testIntegration {
        java.srcDir 'src/test-integration/java'
        resources.srcDir 'src/test-integration/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}
// Taken from https://selimober.com/gradle_unit_integration/
configurations {
    testIntegrationCompile.extendsFrom testCompile
    testIntegrationRuntime.extendsFrom testRuntime
}
task testIntegration(type: Test) {
    testClassesDir = sourceSets.testIntegration.output.classesDir
    classpath = sourceSets.testIntegration.runtimeClasspath
}

checkstyle {
    ignoreFailures = false

    project.ext.checkstyleVersion = '8.7'
    project.ext.sevntuChecksVersion = '1.27.0'

    showViolations = true
    
    configFile = file('checkstyle/checkstyle.xml')
    reportsDir = file("$project.buildDir/reports")
}

check.dependsOn testIntegration
testIntegration.mustRunAfter test
